From 35447cb95b4eaf9d32c05322c4b4e23b512f7220 Mon Sep 17 00:00:00 2001
From: xiaognol <317065820@qq.com>
Date: Mon, 16 Jun 2014 09:01:55 +0800
Subject: [PATCH] fix vibration of vitural keys

Change-Id: Ib949f786b7a2bf72c7c8682054c5ecadb5cddea7
Signed-off-by: xiaognol <317065820@qq.com>
---
 .../internal/policy/impl/PhoneWindowManager.java   | 24 ++++++++++++++++++++++
 1 file changed, 24 insertions(+)

diff --git a/policy/src/com/android/internal/policy/impl/PhoneWindowManager.java b/policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
index fe9ce88..f3f03f4 100644
--- a/policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
+++ b/policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
@@ -2521,6 +2521,22 @@ public class PhoneWindowManager implements WindowManagerPolicy {
             WindowManager.LayoutParams.TYPE_SYSTEM_ERROR,
         };
 
+    private void setHwKeyVib(WindowState win) {
+        WindowManager.LayoutParams attrs;
+        Intent service;
+        ContentResolver res;
+
+		// If a system window has focus, then it doesn't make sense
+		// right now to interact with applications.
+		attrs = win != null ? win.getAttrs() : null;
+		service = new Intent();
+		res = mContext.getContentResolver();
+		if(1 == Settings.System.getInt(res, Settings.System.HAPTIC_FEEDBACK_ENABLED,0))//when setting feedback enable
+		{
+			performHapticFeedbackLw(null, HapticFeedbackConstants.KEYBOARD_TAP, true); //add by syhost
+		}
+    }
+
     /** {@inheritDoc} */
     @Override
     public long interceptKeyBeforeDispatching(WindowState win, KeyEvent event, int policyFlags) {
@@ -2649,6 +2665,8 @@ public class PhoneWindowManager implements WindowManagerPolicy {
                     return -1;
                 }
 
+		//setHwKeyVib(win);
+
                 // Go home!
                 launchHomeFromHotKey();
                 return -1;
@@ -2681,6 +2699,7 @@ public class PhoneWindowManager implements WindowManagerPolicy {
             // Remember that home is pressed and handle special actions.
             if (repeatCount == 0) {
                 mHomePressed = true;
+		setHwKeyVib(win);
                 if (mHomeDoubleTapPending) {
                     mHomeDoubleTapPending = false;
                     mHandler.removeCallbacks(mHomeDoubleTapTimeoutRunnable);
@@ -2722,6 +2741,7 @@ public class PhoneWindowManager implements WindowManagerPolicy {
                 }
                 if (repeatCount == 0) {
                     mMenuPressed = true;
+		    setHwKeyVib(win);
                     if (mEnableShiftMenuBugReports && (metaState & chordBug) == chordBug) {
                         Intent intent = new Intent(Intent.ACTION_BUG_REPORT);
                         mContext.sendOrderedBroadcast(intent, null);
@@ -2841,9 +2861,13 @@ public class PhoneWindowManager implements WindowManagerPolicy {
             }
             return -1;
         } else if (keyCode == KeyEvent.KEYCODE_BACK) {
+			if (down && repeatCount == 0) {
+				setHwKeyVib(win);
+			}
             if (Settings.Secure.getIntForUser(mContext.getContentResolver(),
                     Settings.Secure.KILL_APP_LONGPRESS_BACK, 0, UserHandle.USER_CURRENT) == 1) {
                 if (down && repeatCount == 0) {
+		    setHwKeyVib(win);
                     mHandler.postDelayed(mBackLongPress, mBackKillTimeout);
                 }
             }
-- 
1.8.3.2

